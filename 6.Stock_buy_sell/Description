Leetcode 121:- Buying and Selling Stocks
You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.




So bruh, this buying and selling stocks. 

The array is given with prices of the stocks each day. We need to choose a day to buy the stock and choose a different day in the future to sell the stock such that the profit is the maximum. Return profit. If profit is not possible, return 0.

[7, 1, 5, 3 , 6, 4]

Now, profit is max i.e. selling_price - buying_price should be max.

If I buy at day 0, no profit.
If I buy at day 1, max profit would be to sell on day 4.-> profit = 5
If I buy on day 2, max profit is on day  4. -> profit = 1
If I buy on day 3, max profit is on day 4-> profit = 3
If I buy on day 4, no profit
If I buy on day 5, I am stupid as there is no day to sell in future, stock becomes invalid. SO obviously NO PROFIT.

Output is 5.

The brute force approach is to pick a buying price, and to check if profit is possible in the future, among the profits, select the max profit, if max profit is greater than global maximum profit, update it.

max = 0
for i in range(len(nums)-1):
    bp = nums[i]
    for j in range(i+1, len(nums)):
        if nums[j]-nums[i] > max:
	    max = nums[j] - nums[i]
return max

Now, we need a better approach. This definitely feels like either a greedy algo or a dp one. I will think of an approach.

One approach, let me think.
[7, 1, 5, 3 , 6, 4]

I can't sell at day 0, as I would need to buy it first. 
If I sell at day 1, the profit is 0(not possible) min = 7
If I sell at day 2, the max profit is 4(min value before day 2 is 1)
If I sell at day 3, the max profit is 

Wait a second. I think I need to note down the min price as I move from 1 to len(prices)-1.
Initially, min is prices[0] = 7
Then it is 1
Still 1
Still 1
Still 1
Still 1
Still 1

At the same time, I need to check if prices[i]-min > profit in each step. If yes, update profit. If no, continue.

So, the code would be,

min = prices[0]
profit = 0
for i in range(1,len(prices)):
    if prices[i-1]<min:
	min = prices[i-1]
    if prices[i]-min > profit:
	profit = prices[i]-min
return profit
